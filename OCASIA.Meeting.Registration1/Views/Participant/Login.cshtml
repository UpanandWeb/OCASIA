
@using OCASIA.Meeting.DAL;
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
    var InvalidUser = ViewBag.InvalidUser == null ? false : true;
}

<style>
    body {
        background: url(../Content/img/oca-top-bg.png) top left no-repeat;
    }
    .body-content {
        background: url(../Content/img/footer-bg.png) bottom right no-repeat;
    }
</style>
<div class="container">
    
        <div class="wrap-login text-center">
            <p>@ViewBag.Title</p>
            <section id="loginForm">
                @using (Html.BeginForm("Login12", "Participant", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    if (InvalidUser)
                    {
                        <div class="alert alert-danger" style="padding:7px;margin-bottom: 7px;">Invalid User</div>
                    }

                    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-12 control-label" })
                        <div class="col-md-12">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Enter email" })
                            <div class="text-left">
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-12 control-label" })
                        <div class="col-md-12">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control", @placeholder = "Password" })
                            <div class="text-left">
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @*<div class=" col-md-12">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    <div class="text-left">
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>*@
                    </div>


                    <div class="form-group ">
                        <div class="col-md-12">
                            <input type="submit" value="Log in" class="btn btn-default loginbtn" />
                        </div>
                    </div>

                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
                }
            </section>
        </div>

    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
